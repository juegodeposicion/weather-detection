http://host.robots.ox.ac.uk/pascal/VOC/voc2007/index.html#devkit

+ 

import cv2
import numpy as np
import os
import math
from numba import jit


def add_haze(image_path, output_path, beta, A):
    """
    Adds haze to an image and saves the output.

    Args:
    image_path (str): Path to the input image.
    output_path (str): Path where the output image will be saved.
    beta (float): Haze density coefficient.
    A (float): Atmospheric light intensity.

    Returns:
    None
    """
    image = cv2.imread(image_path)
    if image is None:
        raise FileNotFoundError(f"No image found at {image_path}")

    img_f = image / 255.0  # Normalize image to 0-1 range

    # Process the image with the numba-optimized function
    img_f = apply_haze_numba(img_f, beta, A)

    # Convert back to 0-255 and uint8 type
    img_f = np.clip(img_f * 255, 0, 255).astype(np.uint8)

    # Save the foggy image
    cv2.imwrite(output_path, img_f)


@jit(nopython=True)
def apply_haze_numba(img_f, beta, A):
    row, col, chs = img_f.shape
    size = math.sqrt(max(row, col))
    center = (row // 2, col // 2)

    for j in range(row):
        for l in range(col):
            d = -0.04 * math.sqrt((j - center[0]) ** 2 + (l - center[1]) ** 2) + size
            td = math.exp(-beta * d)
            img_f[j, l, :] = img_f[j, l, :] * td + A * (1 - td)
    return img_f


def add_haze_to_folder(input_folder, output_folder, beta, A):
    """
    Adds haze to all images in the input folder and saves them to the output folder.

    Args:
    input_folder (str): Path to the folder containing input images.
    output_folder (str): Path to the folder to save the hazy images.
    betas (list): List of haze density coefficients.
    A (float): Atmospheric light intensity.

    Returns:
    None
    """
    # Create the output folder if it doesn't exist
    if not os.path.exists(output_folder):
        os.makedirs(output_folder)

    # Iterate through all files in the input folder
    for file_name in os.listdir(input_folder):
        if file_name.lower().endswith(('.jpg', '.jpeg', '.png')):
            input_path = os.path.join(input_folder, file_name)
            output_name = f"{os.path.splitext(file_name)[0]}_beta_{beta:.2f}.jpeg"
            output_path = os.path.join(output_folder, output_name)
            add_haze(input_path, output_path, beta, A)


if __name__ == '__main__':
    input_folder = '/Users/ytnspybq/Desktop/year_5/project/data_sets/paper_data_sets/clear'  # Replace with your input folder path
    output_folder = '/Users/ytnspybq/Desktop/year_5/project/data_sets/paper_data_sets/artificial_haze'  # Replace with your output folder path

    beta = 0.11
    A = 0.5  # Atmospheric light intensity

    add_haze_to_folder(input_folder, output_folder, beta, A)

